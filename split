/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ft_split.c                                         :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: jpanneau <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2019/10/10 08:31:35 by jpanneau          #+#    #+#             */
/*   Updated: 2019/10/15 15:36:51 by jpanneau         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "libft.h"
#include <stdio.h>

static void     freeall(char **tab, int i)
{
        while (i >= 0)
        {
                free(tab[i]);
                i--;
        }
        free(tab);
}

static int      lenw(const char *s, char c)
{
        int i;

        i = 0;
        while (s[i] != c && s[i])
                i++;
        return (i);
}

static int      countw(const char *s, char c)
{
        int i;
        int o;

        i = 0;
        o = 0;
        while (s[i])
        {
                while (s[i] == c && s[i])
                        i++;
                while (s[i] != c && s[i])
                        i++;
                if (s[i - 1] != c)
                        o++;
        }
        return (o);
}

char    **ft_split(char const *s, char c)
{
        int i;
        char **tab_word;

        i = 0;
        if (!c || !(tab_word = malloc(sizeof(char *) * (countw(s, c) + 1))))
                return (0);
        while (*s == c && s)
                s++;
        while (*s)
        {
                if(!(tab_word[i] = malloc(sizeof(char) * lenw(s, c))))
                {
                        freeall(tab_word, i);
                        return (0);
                }
                tab_word[i] = ft_memcpy(tab_word[i], s, lenw(s, c));
                while (*s != c && s)
                        s++;
                while (*s == c && s)
                        s++;
                i++;
        }
        tab_word[i] = 0;
        return (tab_word);
}

int             main(int c, char **v)
{
        (void)c;
        char **tab = ft_split(v[1], v[2][0]);
        int i;

        i = 0;
        while (tab[i] != 0)
        {
                printf("[%s] \n", tab[i]);
        i++;
        }
}
